AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Create any instance for 3-tier Web application framework; Derive from: AWS
  CloudFormation Cross-Stack Reference Sample Template
Parameters:
  NetworkStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the subnet and security group, that will be used in
      this stack. And: 1. Update name for every created instance; 2. Add
      outputs;
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: SampleNetwork
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: web-lab
  CreateBastionServer:
    Description: Will create a Bastion Server? Yes/No
    Type: String
    Default: 'No'
    AllowedValues:
      - 'No'
      - 'Yes'
  CreateWebServer:
    Description: Will create a Web Server? Yes/No
    Type: String
    Default: 'No'
    AllowedValues:
      - 'No'
      - 'Yes'
  CreateDBServer:
    Description: Will create a DB Server? Yes/No
    Type: String
    Default: 'No'
    AllowedValues:
      - 'No'
      - 'Yes'
Mappings:
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-8ff710e2
      HVM64: ami-f5f41398
      HVMG2: ami-4afd1d27
    us-west-2:
      PV64: ami-eff1028f
      HVM64: ami-d0f506b0
      HVMG2: ami-ee897b8e
    us-west-1:
      PV64: ami-ac85fbcc
      HVM64: ami-6e84fa0e
      HVMG2: ami-69106909
    eu-west-1:
      PV64: ami-23ab2250
      HVM64: ami-b0ac25c3
      HVMG2: ami-936de5e0
    eu-central-1:
      PV64: ami-27c12348
      HVM64: ami-d3c022bc
      HVMG2: ami-8e7092e1
    ap-northeast-1:
      PV64: ami-26160d48
      HVM64: ami-29160d47
      HVMG2: ami-91809aff
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-cf32faa1
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-f3dd0a90
      HVM64: ami-1ddc0b7e
      HVMG2: ami-3c30e75f
    ap-southeast-2:
      PV64: ami-8f94b9ec
      HVM64: ami-0c95b86f
      HVMG2: ami-543d1137
    sa-east-1:
      PV64: ami-e188018d
      HVM64: ami-fb890097
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-77a46e1a
      HVM64: ami-05a66c68
      HVMG2: NOT_SUPPORTED
Resources:
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureSampleApp
        ConfigureSampleApp:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: !Join 
                - |+

                - - >-
                    <img
                    src="https://s3.amazonaws.com/cloudformation-examples/cloudformation_graphic.png"
                    alt="AWS CloudFormation Logo"/>
                  - >-
                    <h1>Congratulations, you have successfully launched the AWS
                    CloudFormation sample.</h1>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
      'AWS::CloudFormation::Designer':
        id: 3a586fd7-48b7-47f6-8610-074bab5bddde
    Properties:
      Tags:
        - Key: Name
          Value: !Sub 'WebServer-${AWS::StackName}'
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVM64
      NetworkInterfaces:
        - GroupSet:
            - !ImportValue 
              'Fn::Sub': '${NetworkStackName}-WebSecurityGroupID'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !ImportValue 
            'Fn::Sub': '${NetworkStackName}-PublicSubnetID'
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServerInstance '
            - '         --configsets All '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServerInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Condition: CreatedForWeb
  BastionServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub 'BastionServer-${AWS::StackName}'
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVM64
      NetworkInterfaces:
        - GroupSet:
            - !ImportValue 
              'Fn::Sub': '${NetworkStackName}-BastionSecurityGroupID'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !ImportValue 
            'Fn::Sub': '${NetworkStackName}-BastionSubnetID'
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource BastionServerInstance '
            - '         --configsets All '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource BastionServerInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - ''
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7e9d4b58-c793-4ef1-a85a-5765eea18449
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureSampleApp
        ConfigureSampleApp:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: !Join 
                - |+

                - - >-
                    <img
                    src="https://s3.amazonaws.com/cloudformation-examples/cloudformation_graphic.png"
                    alt="AWS CloudFormation Logo"/>
                  - >-
                    <h1>Congratulations, you have successfully launched the AWS
                    CloudFormation sample.</h1>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
    Condition: CreatedForBastion
  DBServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub 'DBServer-${AWS::StackName}'
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVM64
      NetworkInterfaces:
        - GroupSet:
            - !ImportValue 
              'Fn::Sub': '${NetworkStackName}-DBSecurityGroupID'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !ImportValue 
            'Fn::Sub': '${NetworkStackName}-PrivateSubnetID'
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource DBServerInstance '
            - '         --configsets All '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource DBServerInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - ''
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a597046d-9c48-413b-aeb5-bcb002949732
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureSampleApp
        ConfigureSampleApp:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: !Join 
                - |+

                - - >-
                    <img
                    src="https://s3.amazonaws.com/cloudformation-examples/cloudformation_graphic.png"
                    alt="AWS CloudFormation Logo"/>
                  - >-
                    <h1>Congratulations, you have successfully launched the AWS
                    CloudFormation sample.</h1>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
    Condition: CreatedForDB
Metadata:
  'AWS::CloudFormation::Designer':
    3a586fd7-48b7-47f6-8610-074bab5bddde:
      size:
        width: 60
        height: 60
      position:
        x: 240
        'y': 70
      z: 1
      embeds: []
    7e9d4b58-c793-4ef1-a85a-5765eea18449:
      size:
        width: 60
        height: 60
      position:
        x: 140
        'y': 70
      z: 0
      embeds: []
    a597046d-9c48-413b-aeb5-bcb002949732:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 70
      z: 0
      embeds: []
Conditions:
  CreatedForWeb: !Equals 
    - !Ref CreateWebServer
    - 'Yes'
  CreatedForBastion: !Equals 
    - !Ref CreateBastionServer
    - 'Yes'
  CreatedForDB: !Equals 
    - !Ref CreateDBServer
    - 'Yes'
Outputs:
  WebServerPublicIp:
    Description: Public IP for Web server instance
    Value: !If 
      - CreatedForWeb
      - !GetAtt 
        - WebServerInstance
        - PublicIp
      - N/A
  BasionServerPublicIp:
    Description: Public IP for Bastion server instance
    Value: !If 
      - CreatedForWeb
      - !GetAtt 
        - BastionServerInstance
        - PublicIp
      - N/A
  DBServerPrivateIp:
    Description: Private IP for DB server instance
    Value: !If 
      - CreatedForDB
      - !GetAtt 
        - DBServerInstance
        - PrivateIp
      - N/A
